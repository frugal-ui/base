/* fonts */
html {
    font-family: var(--font-standard);
}

pre,
code {
    font-family: var(--font-mono);
}

/* basic */
button,
input,
textarea,
select {
    border-radius: var(--corner-radius);
}

input[type='radio'] {
    border-radius: 100%;
}

button,
input,
textarea,
select {
    appearance: none;
    --webkit-appearance: none;
    --moz-appearance: none;
}

button,
input,
textarea,
select,
.surface {
    border-width: var(--line-width);
    border-style: var(--line-style);
}

label.surface:has(:focus),
:is(input, textarea):focus,
[selected] {
    outline-width: var(--spacing-sm);
    outline-style: var(--line-style);
}

label.surface :focus {
    outline-width: 0px;
}

hr {
    border-bottom: var(--line-width) var(--line-style) var(--lines);
}

.images-background {
    background-size: cover;
    background-position: center;
}

label:not(.has-checkbox-or-radio),
optgroup {
    text-indent: var(--padding-h-inner);
}

label,
optgroup {
    font-size: small;
}

option {
    text-indent: initial;
}

/* paddings */
header,
main,
footer {
    padding: var(--padding-v-lg) var(--padding-h-outer);
}

h1,
h2,
h3,
h4,
h5,
p,
button,
input,
textarea,
select[size='0']:not([multiple]),
option,
.padding-inner {
    padding: var(--padding-v-md) var(--padding-h-inner);
}

/* spacing */
.grid,
.list-view {
    gap: var(--spacing-sm);
}

hr {
    margin: var(--spacing-md) 0px;
}

label.has-checkbox-or-radio {
    gap: var(--spacing-md);
}

/* colors */
html,
option {
    color: var(--text);
}

html,
.stage .scene {
    background: var(--background);
}

a {
    color: var(--text-anchor);
}

a:hover {
    color: var(--text-anchor-hover);
}

button,
input,
textarea,
select,
.surface {
    background: var(--surface);
    color: var(--on-surface);
    border-color: var(--surface-border);
}

:is(
        button,
        select[size='0']:not([multiple]),
        .surface.clickable,
        option:not([disabled]),
        input[type='checkbox']:not(:checked),
        input[type='radio']:not(:checked)
    ):hover {
    background: var(--surface-hover);
}

:is(
        button,
        select[size='0']:not([multiple]),
        .surface.clickable,
        option:not([disabled]),
        input[type='checkbox']:not(:checked),
        input[type='radio']:not(:checked)
    ):active,
:is(input, textarea):focus {
    background: var(--surface-active);
}

label.surface:has(:focus),
:is(input, textarea):focus,
[selected] {
    outline-color: var(--primary);
}

option:checked,
:is(button, input, textarea, select, .surface).primary,
:is(input[type='checkbox'], input[type='radio']):checked {
    background: var(--primary);
    color: var(--on-primary);
    border-color: var(--primary-border);
}

:is(
        option:checked:not([disabled]),
        input[type='checkbox']:checked,
        input[type='radio']:checked
    ):hover,
:is(button, select, .surface.clickable).primary:hover {
    background: var(--primary-hover);
}

:is(
        option:checked:not([disabled]),
        input[type='checkbox']:checked,
        input[type='radio']:checked
    ):active,
:is(button, select, .surface.clickable).primary:active {
    background: var(--primary-active);
}

:is(button, input, textarea, select, .surface).destructive {
    background: var(--destructive);
    color: var(--on-destructive);
    border-color: var(--destructive-border);
}

:is(button, select, .surface.clickable).destructive:hover {
    background: var(--destructive-hover);
}

:is(button, select, .surface.clickable).destructive:active {
    background: var(--destructive-active);
}

.images-background {
    background: var(--surface);
}

label,
label.surface,
optgroup {
    color: var(--text-secondary);
}

/* layout */
html,
body {
    height: 100%;
    min-height: 100%;
    width: 100%;
    min-width: 100%;
}

.icon {
    width: var(--icon-size);
    height: var(--icon-size);
}

input[type='checkbox'],
input[type='radio'] {
    width: var(--checkbox-size);
    height: var(--checkbox-size);

    padding: 0px;
}

.grid {
    display: grid;
}

optgroup:not(:first-child) {
    padding-top: var(--spacing-md);
}

optgroup {
    padding-bottom: var(--spacing-md);
}

label {
    display: flex;
    flex-direction: column;
    align-items: stretch;
}

label input {
    margin-top: var(--spacing-sm);
}

label.has-checkbox-or-radio {
    flex-direction: row-reverse;
    align-items: center;
    justify-content: start;
}

label.surface {
    padding-top: var(--padding-v-lg);
}

label.surface input {
    padding-bottom: var(--padding-v-lg);
}

.list-view {
    display: flex;
    flex-direction: column;
}

.select-wrapper {
    position: relative;
}

.select-wrapper select[size='0']:not([multiple]) {
    padding-right: calc(var(--icon-size) * 2.5);
}

.select-wrapper select[size='0']:not([multiple]) + .icon {
    width: 12px;
    height: 12px;

    position: absolute;
    right: var(--padding-h-inner);
}

.select-wrapper select:not([size='0']):is([size], [multiple]) + .icon {
    display: none;
}

.spacer {
    flex: 1;
    width: 100%;
    height: 100%;
}

.stack-vertical,
.stack-horizontal,
.icon {
    display: flex;
    align-items: center;
    justify-content: center;
}

.stack-vertical {
    flex-direction: column;
}

.stage {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;

    width: 100%;
    height: 100%;
}

.scene {
    grid-column-start: 1;
    grid-row-start: 1;
    grid-column-end: 2;
    grid-row-end: 2;
}

@media (min-width: 624px) {
    .stage.splitting {
        grid-template-columns: 18rem 1fr;
    }

    .stage.splitting .scene {
        grid-column-start: 2;
        grid-column-end: 3;
    }

    .stage.splitting .scene:first-child {
        grid-column-start: 1;
        grid-column-end: 2;
    }
}

svg {
    width: 100%;
    height: 100%;
}
